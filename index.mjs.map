{"version":3,"file":"index.mjs","sources":["../lib/print.js","../lib/sum.js","../lib/outer.js","../lib/absdiff.js","../lib/validate.js","../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert-is-positive-integer' );\nvar isObject = require( '@stdlib/assert-is-plain-object' );\nvar isBoolean = require( '@stdlib/assert-is-boolean' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar roundn = require( '@stdlib/math-base-special-roundn' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Returns a function to pretty print test results.\n*\n* @private\n* @param {Object} results - test results\n* @returns {Function} pretty print function\n*/\nfunction prettyPrint( results ) {\n\treturn print;\n\n\t/**\n\t* Pretty-print test results.\n\t*\n\t* @private\n\t* @param {Options} [opts] - options object\n\t* @param {PositiveInteger} [opts.digits=4] - number of digits after the decimal point\n\t* @param {boolean} [opts.decision=true] - boolean indicating whether to print the test decision\n\t* @throws {TypeError} options argument must be an object\n\t* @throws {TypeError} must provide valid options\n\t* @returns {string} formatted results\n\t*/\n\tfunction print( opts ) {\n\t\tvar decision;\n\t\tvar dgts;\n\t\tvar str;\n\n\t\tdgts = 4;\n\t\tdecision = true;\n\t\tif ( arguments.length > 0 ) {\n\t\t\tif ( !isObject( opts ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an object. Value: `%s`.', opts ) );\n\t\t\t}\n\t\t\tif ( hasOwnProp( opts, 'digits' ) ) {\n\t\t\t\tif ( !isPositiveInteger( opts.digits ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'digits', opts.digits ) );\n\t\t\t\t}\n\t\t\t\tdgts = opts.digits;\n\t\t\t}\n\t\t\tif ( hasOwnProp( opts, 'decision' ) ) {\n\t\t\t\tif ( !isBoolean( opts.decision ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'decision', opts.decision ) );\n\t\t\t\t}\n\t\t\t\tdecision = opts.decision;\n\t\t\t}\n\t\t}\n\t\tstr = '';\n\t\tstr += results.method;\n\t\tstr += '\\n\\n';\n\t\tstr += 'Null hypothesis: the two variables are independent';\n\t\tstr += '\\n\\n';\n\t\tstr += '    pValue: ' + roundn( results.pValue, -dgts ) + '\\n';\n\t\tstr += '    statistic: ' + roundn( results.statistic, -dgts ) + '\\n';\n\t\tstr += '    degrees of freedom: ' + results.df + '\\n';\n\t\tstr += '\\n';\n\t\tif ( decision ) {\n\t\t\tstr += 'Test Decision: ';\n\t\t\tif ( results.rejected ) {\n\t\t\t\tstr += 'Reject null in favor of alternative at ' + (results.alpha*100) + '% significance level';\n\t\t\t} else {\n\t\t\t\tstr += 'Fail to reject null in favor of alternative at ' + (results.alpha*100) + '% significance level';\n\t\t\t}\n\t\t\tstr += '\\n';\n\t\t}\n\t\treturn str;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = prettyPrint;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Float64Array = require( '@stdlib/array-float64' );\n\n\n// MAIN //\n\n/**\n* Computes the sum along a matrix dimension.\n*\n* @param {Matrix} mat - input matrix\n* @param {number} [dim=2] - matrix dimension along which to compute the sum. If `dim=1`, compute along matrix rows. If `dim=2`, compute along matrix columns.\n* @returns {(Int32Array|number)} sums or 0\n*/\nfunction sum( mat, dim ) {\n\tvar out;\n\tvar s0;\n\tvar s1;\n\tvar s;\n\tvar M;\n\tvar N;\n\tvar o;\n\tvar i;\n\tvar j;\n\tvar k;\n\n\tif ( dim === 1 ) {\n\t\t// Compute along the rows...\n\t\tM = mat.shape[ 1 ];\n\t\tN = mat.shape[ 0 ];\n\t\ts0 = mat.strides[ 1 ];\n\t\ts1 = mat.strides[ 0 ];\n\t} else {\n\t\t// Compute along the columns...\n\t\tM = mat.shape[ 0 ];\n\t\tN = mat.shape[ 1 ];\n\t\ts0 = mat.strides[ 0 ];\n\t\ts1 = mat.strides[ 1 ];\n\t}\n\tif ( M === 0 || N === 0 ) {\n\t\treturn 0;\n\t}\n\tout = new Float64Array( M );\n\to = mat.offset;\n\tfor ( i = 0; i < M; i++ ) {\n\t\tk = o + ( i*s0 );\n\t\ts = 0;\n\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\ts += mat.data[ k + ( j*s1 ) ];\n\t\t}\n\t\tout[ i ] = s;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = sum;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar array = require( '@stdlib/ndarray-array' );\nvar Float64Array = require( '@stdlib/array-float64' );\n\n\n// MAIN //\n\n/**\n* Computes the outer product.\n*\n* @param {Float64Array} x - first factor of outer product\n* @param {Float64Array} y - second factor of outer product\n* @returns {Matrix} output matrix\n*/\nfunction outer( x, y ) {\n\tvar xlen = x.length;\n\tvar ylen = y.length;\n\tvar out = array( new Float64Array( xlen * ylen ), {\n\t\t'shape': [ xlen, ylen ]\n\t});\n\tvar i;\n\tvar j;\n\tfor ( i = 0; i < xlen; i++ ) {\n\t\tfor ( j = 0; j < ylen; j++ ) {\n\t\t\tout.set( i, j, x[ i ] * y[ j ] );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = outer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Float64Array = require( '@stdlib/array-float64' );\nvar array = require( '@stdlib/ndarray-array' );\nvar abs = require( '@stdlib/math-base-special-abs' );\n\n\n// MAIN //\n\n/**\n* Computes an element-wise absolute difference of two matrices and stores the results in a typed array.\n*\n* @param {Matrix} x - first input matrix\n* @param {Matrix} y - second input matrix\n* @returns {Matrix} matrix containing the absolute differences\n*/\nfunction absdiff( x, y ) {\n\tvar out;\n\tvar i;\n\tvar j;\n\tvar M;\n\tvar N;\n\tvar v;\n\n\tM = x.shape[ 0 ];\n\tN = x.shape[ 1 ];\n\tout = array( new Float64Array( M * N ), {\n\t\t'shape': [ M, N ]\n\t});\n\tfor ( i = 0; i < M; i++ ) {\n\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\tv = abs( x.get( i, j ) - y.get( i, j ) );\n\t\t\tout.set( i, j, v );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = absdiff;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBoolean = require( '@stdlib/assert-is-boolean' ).isPrimitive;\nvar isNumber = require( '@stdlib/assert-is-number' ).isPrimitive;\nvar isObject = require( '@stdlib/assert-is-plain-object' );\nvar isnan = require( '@stdlib/assert-is-nan' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Options} options - function options\n* @param {number} [options.alpha] - significance level\n* @param {boolean} [options.correct] - boolean indicating whether to use Yates' continuity correction when provided a 2x2 contingency table\n* @returns {(null|Error)} null or an error\n*\n* @example\n* var opts = {};\n* var options = {\n*     'alpha': 0.01,\n*     'correct': true\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif ( !isNumber( opts.alpha ) || isnan( opts.alpha ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'alpha', opts.alpha ) );\n\t\t}\n\t\tif ( opts.alpha < 0.0 || opts.alpha > 1.0 ) {\n\t\t\treturn new RangeError( format( 'invalid option. `%s` option must be a number on the interval `[0,1]`. Value: `%s`.', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'correct' ) ) {\n\t\topts.correct = options.correct;\n\t\tif ( !isBoolean( opts.correct ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'correct', opts.simulate ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-read-only-property' );\nvar isNonNegativeIntegerArray = require( '@stdlib/assert-is-nonnegative-integer-array' );\nvar isMatrixLike = require( '@stdlib/assert-is-matrix-like' );\nvar isArrayArray = require( '@stdlib/assert-is-array-array' );\nvar array = require( '@stdlib/ndarray-array' );\nvar incrmin = require( '@stdlib/stats-incr-min' );\nvar gsum = require( '@stdlib/blas-ext-base-gsum' );\nvar min = require( '@stdlib/math-base-special-min' );\nvar format = require( '@stdlib/string-format' );\nvar copy = require( '@stdlib/utils-copy' );\nvar chisqCDF = require( '@stdlib/stats-base-dists-chisquare-cdf' );\nvar prettyPrint = require( './print.js' );\nvar defaults = require( './defaults.json' );\nvar sumByDimension = require( './sum.js' );\nvar outer = require( './outer.js' );\nvar absdiff = require( './absdiff.js' );\nvar validate = require( './validate.js' );\n\n\n// MAIN //\n\n/**\n* Performs a chi-square independence test.\n*\n* @param {(ndarray|ArrayArray)} x - two-way table of cell counts\n* @param {Options} [options] - function options\n* @param {number} [options.alpha=0.05] - significance level\n* @param {boolean} [options.correct=true] - boolean indicating whether to use Yates' continuity correction when provided a 2x2 contingency table\n* @throws {TypeError} first argument must be an array of arrays or ndarray-like object with dimension two\n* @returns {Object} test results\n*\n* @example\n*\n* @example\n* var x = [ [ 20, 30 ], [ 30, 20 ] ];\n* var out = chi2test( x );\n* // returns { 'rejected': false, 'alpha': 0.05, 'pValue': ~0.072, ... }\n*/\nfunction chi2test( x, options ) {\n\tvar absDiff;\n\tvar colSums;\n\tvar rowSums;\n\tvar minAbs;\n\tvar yates;\n\tvar means;\n\tvar param;\n\tvar nrow;\n\tvar ncol;\n\tvar opts;\n\tvar pval;\n\tvar stat;\n\tvar err;\n\tvar out;\n\tvar N;\n\tvar e;\n\tvar i;\n\tvar j;\n\n\tif ( isArrayArray( x ) ) {\n\t\tx = array( x );\n\t}\n\tif ( !isMatrixLike( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument `x` must be an array of arrays or ndarray-like object with dimension two. Value: `%s`.', x ) );\n\t}\n\tif ( !isNonNegativeIntegerArray( x.data ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument `x` must contain nonnegative integers. Value: `%s`.', x ) );\n\t}\n\topts = copy( defaults );\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tN = gsum( x.length, x.data, 1 );\n\tnrow = x.shape[ 0 ];\n\tncol = x.shape[ 1 ];\n\n\tcolSums = sumByDimension( x, 1 );\n\trowSums = sumByDimension( x, 2 );\n\tmeans = outer( rowSums, colSums );\n\tfor ( i = 0; i < means.length; i++ ) {\n\t\tmeans.data[ i ] /= N;\n\t}\n\tabsDiff = absdiff( x, means );\n\n\tif ( opts.correct && nrow === 2 && ncol === 2 ) {\n\t\t// Apply Yates' continuity correction:\n\t\tminAbs = incrmin();\n\t\tfor ( i = 0; i < absDiff._buffer.length; i++ ) {\n\t\t\tminAbs( absDiff._buffer[ i ] );\n\t\t}\n\t\tyates = min( 0.5, minAbs() );\n\t\tfor ( i = 0; i < absDiff._buffer.length; i++ ) {\n\t\t\tabsDiff._buffer[ i ] -= yates;\n\t\t}\n\t}\n\tfor ( i = 0; i < nrow; i++) {\n\t\tfor ( j = 0; j < ncol; j++ ) {\n\t\t\te = absDiff.get( i, j ) * absDiff.get( i, j ) / means.get( i, j );\n\t\t\tabsDiff.set( i, j, e );\n\t\t}\n\t}\n\tstat = gsum( absDiff.length, absDiff._buffer, 1 );\n\tparam = ( nrow - 1 ) * ( ncol - 1 );\n\tpval = 1 - chisqCDF( stat, param );\n\n\tout = {};\n\tsetReadOnly( out, 'rejected', pval <= opts.alpha );\n\tsetReadOnly( out, 'alpha', opts.alpha );\n\tsetReadOnly( out, 'pValue', pval );\n\tsetReadOnly( out, 'df', param );\n\tsetReadOnly( out, 'expected', means );\n\tsetReadOnly( out, 'statistic', stat );\n\tsetReadOnly( out, 'method', 'Chi-square independence test' );\n\tsetReadOnly( out, 'print', prettyPrint( out ) );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = chi2test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Chi-square independence test.\n*\n* @module @stdlib/stats-chi2test\n*\n* @example\n* var chi2test = require( '@stdlib/stats-chi2test' );\n*\n* var x = [ [ 20, 30 ], [ 30, 20 ] ];\n* var out = chi2test( x );\n* // returns { 'rejected': false, 'alpha': 0.05, 'pValue': ~0.072, ... }\n*\n* var table = out.print();\n* /*\n*     Chi-square independence test\n*\n*     Null hypothesis: the two variables are independent\n*\n*         pValue: 0.0719\n*         statistic: 3.24\n*         degrees of freedom: 1\n*\n*     Test Decision: Fail to reject null in favor of alternative at 5% significance level\n* /*\n*/\n\n// MODULES //\n\nvar chi2test = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = chi2test;\n"],"names":["isPositiveInteger","require$$0","isObject","require$$1","isBoolean","require$$2","isPrimitive","hasOwnProp","require$$3","roundn","require$$4","format","require$$5","print","results","opts","decision","dgts","str","arguments","length","TypeError","digits","method","pValue","statistic","df","rejected","alpha","Float64Array","sum_1","mat","dim","out","s0","s1","s","M","N","o","i","j","k","shape","strides","offset","data","array","outer_1","x","y","xlen","ylen","set","abs","absdiff_1","v","get","isNumber","isnan","setReadOnly","isNonNegativeIntegerArray","isMatrixLike","isArrayArray","incrmin","gsum","require$$6","min","require$$7","require$$8","copy","require$$9","chisqCDF","require$$10","prettyPrint","require$$11","defaults","require$$12","sumByDimension","require$$13","outer","require$$14","absdiff","require$$15","validate","options","RangeError","correct","simulate","lib","absDiff","colSums","rowSums","minAbs","yates","means","param","nrow","ncol","pval","stat","err","e","_buffer"],"mappings":"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"}